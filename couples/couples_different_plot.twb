<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20194.19.1010.1202                               -->
<workbook original-version='18.1' source-build='2019.4.0 (20194.19.1010.1202)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='couples_different' inline='true' name='federated.0zxfu9i06hoyqb11arps70l0vm51' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='couples_different' name='semistructpassivestore-direct.1m6v9bx13z38qo14liiaa026zipe'>
            <connection class='semistructpassivestore-direct' directory='C:/Users/enric/Desktop/DataViz/DV_exam' filename='couples_different.json' password='' server=''>
              <semistruct-schemas>
                <semistruct-schema table='[couples_different.json]'>
                  <map key='{root}' value='true' />
                </semistruct-schema>
              </semistruct-schemas>
            </connection>
          </named-connection>
        </named-connections>
        <relation connection='semistructpassivestore-direct.1m6v9bx13z38qo14liiaa026zipe' name='couples_different.json' table='[couples_different.json]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Indice documento (generato)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Indice documento (generato)]</local-name>
            <parent-name>[couples_different.json]</parent-name>
            <remote-alias>Indice documento (generato)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>actor</remote-name>
            <remote-type>130</remote-type>
            <local-name>[actor]</local-name>
            <parent-name>[couples_different.json]</parent-name>
            <remote-alias>actor</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>couples</remote-name>
            <remote-type>130</remote-type>
            <local-name>[couples]</local-name>
            <parent-name>[couples_different.json]</parent-name>
            <remote-alias>couples</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>director</remote-name>
            <remote-type>130</remote-type>
            <local-name>[director]</local-name>
            <parent-name>[couples_different.json]</parent-name>
            <remote-alias>director</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>metascore_mean</remote-name>
            <remote-type>5</remote-type>
            <local-name>[metascore_mean]</local-name>
            <parent-name>[couples_different.json]</parent-name>
            <remote-alias>metascore_mean</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>number_of_films</remote-name>
            <remote-type>5</remote-type>
            <local-name>[number_of_films]</local-name>
            <parent-name>[couples_different.json]</parent-name>
            <remote-alias>number_of_films</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='Sum' datatype='integer' name='[Indice documento (generato)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>Indice documento (generato)</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Actor' datatype='string' name='[actor]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>actor</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Couples' datatype='string' name='[couples]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>couples</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Director' datatype='string' name='[director]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>director</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Metascore Mean' datatype='real' name='[metascore_mean]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>metascore_mean</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Number Of Films' datatype='real' name='[number_of_films]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>number_of_films</run>
          </formatted-text>
        </desc>
      </column>
      <folder name='Couples Different' role='dimensions'>
        <folder-item name='[Indice documento (generato)]' type='field' />
        <folder-item name='[actor]' type='field' />
        <folder-item name='[couples]' type='field' />
        <folder-item name='[director]' type='field' />
      </folder>
      <layout dim-ordering='alphabetic' dim-percentage='0.542146' measure-ordering='alphabetic' measure-percentage='0.457854' show-structure='false' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Italy&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Foglio 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='couples_different' name='federated.0zxfu9i06hoyqb11arps70l0vm51' />
          </datasources>
          <datasource-dependencies datasource='federated.0zxfu9i06hoyqb11arps70l0vm51'>
            <column caption='SUM([Metascore Mean]/10)' datatype='real' name='[Calculation_805299971296043008]' role='measure' type='quantitative' user:unnamed='Foglio 1'>
              <calculation class='tableau' formula='SUM([metascore_mean]/10)' />
            </column>
            <column caption='Couples' datatype='string' name='[couples]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>couples</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Metascore Mean' datatype='real' name='[metascore_mean]' role='measure' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>metascore_mean</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[couples]' derivation='None' name='[none:couples:nk]' pivot='key' type='nominal' />
            <column caption='Number Of Films' datatype='real' name='[number_of_films]' role='measure' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>number_of_films</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[number_of_films]' derivation='Sum' name='[sum:number_of_films:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_805299971296043008]' derivation='User' name='[usr:Calculation_805299971296043008:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0zxfu9i06hoyqb11arps70l0vm51].[none:couples:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([number_of_films])' function='order' user:ui-marker='order'>
                <groupfilter from='&quot;Aaron Seltzer, Crista Flanagan&quot;' function='range' level='[none:couples:nk]' to='&quot;Wes Anderson, Bill Murray&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <natural-sort column='[federated.0zxfu9i06hoyqb11arps70l0vm51].[none:couples:nk]' direction='ASC' />
          <filter class='quantitative' column='[federated.0zxfu9i06hoyqb11arps70l0vm51].[sum:number_of_films:qk]' included-values='in-range'>
            <min>6.0</min>
            <max>8.0</max>
          </filter>
          <slices>
            <column>[federated.0zxfu9i06hoyqb11arps70l0vm51].[sum:number_of_films:qk]</column>
            <column>[federated.0zxfu9i06hoyqb11arps70l0vm51].[none:couples:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0zxfu9i06hoyqb11arps70l0vm51].[sum:number_of_films:qk]' field-type='quantitative' major-origin='0.0' major-spacing='1.0' minor-origin='0.0' minor-spacing='1.0' scope='cols' type='space' />
            <format attr='height' field='[federated.0zxfu9i06hoyqb11arps70l0vm51].[sum:number_of_films:qk]' value='25' />
            <format attr='tick-color' scope='rows' value='#00000000' />
            <format attr='stroke-size' value='3' />
            <format attr='stroke-color' value='#c0c0c0' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-align' value='auto' />
            <format attr='wrap' value='off' />
            <format attr='vertical-align' value='center' />
            <format attr='cell-w' value='52' />
            <format attr='cell-h' value='156' />
            <format attr='cell' value='26' />
            <format attr='cell-q' value='130' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0zxfu9i06hoyqb11arps70l0vm51].[none:couples:nk]' value='268' />
            <format attr='wrap' data-class='total' scope='cols' value='auto' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.0zxfu9i06hoyqb11arps70l0vm51].[usr:Calculation_805299971296043008:ok]' field-type='ordinal' max-size='1' min-size='0.467627' type='catsize' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#000000' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='stroke-color' value='#000000' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' value='#000000' />
            <format attr='line-pattern-only' value='dashed' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='dotted' />
            <format attr='stroke-size' value='1' />
            <format attr='stroke-color' value='#c0c0c0' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-color' value='#000000' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.0zxfu9i06hoyqb11arps70l0vm51].[usr:Calculation_805299971296043008:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='428' />
                <format attr='maxwidth' value='428' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0zxfu9i06hoyqb11arps70l0vm51].[none:couples:nk]</rows>
        <cols>[federated.0zxfu9i06hoyqb11arps70l0vm51].[sum:number_of_films:qk]</cols>
      </table>
      <simple-id uuid='{4B953210-F346-4230-9EB7-589B86093180}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='Foglio 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0zxfu9i06hoyqb11arps70l0vm51].[none:couples:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0zxfu9i06hoyqb11arps70l0vm51].[usr:Calculation_805299971296043008:ok]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-height' />
        <highlight>
          <color-one-way>
            <field>[federated.0zxfu9i06hoyqb11arps70l0vm51].[none:couples:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7BFD344A-D2F4-4B23-B2C2-C59C064C3C93}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Foglio 1' width='192'>
      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
      QQAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
