<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20194.19.1010.1202                               -->
<workbook original-version='18.1' source-build='2019.4.0 (20194.19.1010.1202)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='couples_different' inline='true' name='federated.0zxfu9i06hoyqb11arps70l0vm51' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='couples_different' name='semistructpassivestore-direct.1m6v9bx13z38qo14liiaa026zipe'>
            <connection class='semistructpassivestore-direct' directory='C:/Users/enric/Desktop/DataViz/DV_exam' filename='couples_different.json' password='' server=''>
              <semistruct-schemas>
                <semistruct-schema table='[couples_different.json]'>
                  <map key='{root}' value='true' />
                </semistruct-schema>
              </semistruct-schemas>
            </connection>
          </named-connection>
        </named-connections>
        <relation connection='semistructpassivestore-direct.1m6v9bx13z38qo14liiaa026zipe' name='couples_different.json' table='[couples_different.json]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Indice documento (generato)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Indice documento (generato)]</local-name>
            <parent-name>[couples_different.json]</parent-name>
            <remote-alias>Indice documento (generato)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>actor</remote-name>
            <remote-type>130</remote-type>
            <local-name>[actor]</local-name>
            <parent-name>[couples_different.json]</parent-name>
            <remote-alias>actor</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>couples</remote-name>
            <remote-type>130</remote-type>
            <local-name>[couples]</local-name>
            <parent-name>[couples_different.json]</parent-name>
            <remote-alias>couples</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>director</remote-name>
            <remote-type>130</remote-type>
            <local-name>[director]</local-name>
            <parent-name>[couples_different.json]</parent-name>
            <remote-alias>director</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>metascore_mean</remote-name>
            <remote-type>5</remote-type>
            <local-name>[metascore_mean]</local-name>
            <parent-name>[couples_different.json]</parent-name>
            <remote-alias>metascore_mean</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>number_of_films</remote-name>
            <remote-type>5</remote-type>
            <local-name>[number_of_films]</local-name>
            <parent-name>[couples_different.json]</parent-name>
            <remote-alias>number_of_films</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='Sum' datatype='integer' name='[Indice documento (generato)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>Indice documento (generato)</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Actor' datatype='string' name='[actor]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>actor</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Couples' datatype='string' name='[couples]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>couples</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Director' datatype='string' name='[director]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>director</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Metascore Mean' datatype='real' name='[metascore_mean]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>metascore_mean</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Number Of Films' datatype='real' name='[number_of_films]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>number_of_films</run>
          </formatted-text>
        </desc>
      </column>
      <folder name='Couples Different' role='dimensions'>
        <folder-item name='[Indice documento (generato)]' type='field' />
        <folder-item name='[actor]' type='field' />
        <folder-item name='[couples]' type='field' />
        <folder-item name='[director]' type='field' />
      </folder>
      <layout dim-ordering='alphabetic' dim-percentage='0.542146' measure-ordering='alphabetic' measure-percentage='0.457854' show-structure='false' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Italy&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Foglio 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='couples_different' name='federated.0zxfu9i06hoyqb11arps70l0vm51' />
          </datasources>
          <datasource-dependencies datasource='federated.0zxfu9i06hoyqb11arps70l0vm51'>
            <column caption='SUM([Metascore Mean]/10)' datatype='real' name='[Calculation_805299971296043008]' role='measure' type='quantitative' user:unnamed='Foglio 1'>
              <calculation class='tableau' formula='SUM([metascore_mean]/10)' />
            </column>
            <column caption='Couples' datatype='string' name='[couples]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>couples</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Metascore Mean' datatype='real' name='[metascore_mean]' role='measure' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>metascore_mean</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[couples]' derivation='None' name='[none:couples:nk]' pivot='key' type='nominal' />
            <column caption='Number Of Films' datatype='real' name='[number_of_films]' role='measure' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>number_of_films</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[number_of_films]' derivation='Sum' name='[sum:number_of_films:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_805299971296043008]' derivation='User' name='[usr:Calculation_805299971296043008:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0zxfu9i06hoyqb11arps70l0vm51].[none:couples:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([number_of_films])' function='order' user:ui-marker='order'>
                <groupfilter from='&quot;Aaron Seltzer, Crista Flanagan&quot;' function='range' level='[none:couples:nk]' to='&quot;Wes Anderson, Bill Murray&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <natural-sort column='[federated.0zxfu9i06hoyqb11arps70l0vm51].[none:couples:nk]' direction='ASC' />
          <filter class='quantitative' column='[federated.0zxfu9i06hoyqb11arps70l0vm51].[sum:number_of_films:qk]' included-values='in-range'>
            <min>6.0</min>
            <max>8.0</max>
          </filter>
          <slices>
            <column>[federated.0zxfu9i06hoyqb11arps70l0vm51].[sum:number_of_films:qk]</column>
            <column>[federated.0zxfu9i06hoyqb11arps70l0vm51].[none:couples:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0zxfu9i06hoyqb11arps70l0vm51].[sum:number_of_films:qk]' field-type='quantitative' major-origin='0.0' major-spacing='1.0' minor-origin='0.0' minor-spacing='1.0' scope='cols' type='space' />
            <format attr='height' field='[federated.0zxfu9i06hoyqb11arps70l0vm51].[sum:number_of_films:qk]' value='25' />
            <format attr='tick-color' scope='rows' value='#00000000' />
            <format attr='stroke-size' value='3' />
            <format attr='stroke-color' value='#c0c0c0' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-align' value='auto' />
            <format attr='wrap' value='off' />
            <format attr='vertical-align' value='center' />
            <format attr='cell-w' value='44' />
            <format attr='cell-h' value='44' />
            <format attr='cell' value='22' />
            <format attr='cell-q' value='110' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0zxfu9i06hoyqb11arps70l0vm51].[none:couples:nk]' value='268' />
            <format attr='wrap' data-class='total' scope='cols' value='auto' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.0zxfu9i06hoyqb11arps70l0vm51].[usr:Calculation_805299971296043008:ok]' field-type='ordinal' max-size='1' min-size='0.467627' type='catsize' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#000000' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='stroke-color' value='#000000' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' value='#000000' />
            <format attr='line-pattern-only' value='dashed' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='dotted' />
            <format attr='stroke-size' value='1' />
            <format attr='stroke-color' value='#c0c0c0' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-color' value='#000000' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.0zxfu9i06hoyqb11arps70l0vm51].[usr:Calculation_805299971296043008:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2.1988949775695801' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='536' />
                <format attr='maxwidth' value='536' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0zxfu9i06hoyqb11arps70l0vm51].[none:couples:nk]</rows>
        <cols>[federated.0zxfu9i06hoyqb11arps70l0vm51].[sum:number_of_films:qk]</cols>
      </table>
      <simple-id uuid='{4B953210-F346-4230-9EB7-589B86093180}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='Foglio 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0zxfu9i06hoyqb11arps70l0vm51].[none:couples:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0zxfu9i06hoyqb11arps70l0vm51].[usr:Calculation_805299971296043008:ok]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-height' />
        <highlight>
          <color-one-way>
            <field>[federated.0zxfu9i06hoyqb11arps70l0vm51].[none:couples:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7BFD344A-D2F4-4B23-B2C2-C59C064C3C93}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Foglio 1' width='192'>
      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
      0PH/A1b7Re0z3xrwAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
